package com.sosyalmedia.notificationservice.controller;

import com.sosyalmedia.notificationservice.dto.response.ApiResponse;
import com.sosyalmedia.notificationservice.dto.response.AutoScheduleResponse;
import com.sosyalmedia.notificationservice.service.AutoScheduleService;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/v1/notifications/auto-schedule")
@RequiredArgsConstructor
@Slf4j
public class AutoScheduleController {

    private final AutoScheduleService autoScheduleService;

    /**
     * ðŸŽ¯ Yeni mÃ¼ÅŸteri iÃ§in otomatik takvim oluÅŸtur
     * <p>
     * Customer oluÅŸturulduktan sonra bu endpoint'i Ã§aÄŸÄ±rarak:
     * - Ä°lk post (1 ay sonra)
     * - 100 dÃ¼zenli post (frequency bazlÄ±)
     * - Ã–zel gÃ¼nler (resmi tatiller)
     * <p>
     * otomatik olarak oluÅŸturulur.
     */
    @PostMapping("/{customerId}")

    public ResponseEntity<ApiResponse<AutoScheduleResponse>> createAutoSchedule(
            @PathVariable Long customerId) {

        log.info("ðŸŽ¯ REST: POST /api/v1/notifications/auto-schedule/{}", customerId);

        AutoScheduleResponse response = autoScheduleService.createAutoSchedule(customerId);

        return ResponseEntity.status(HttpStatus.CREATED)
                .body(ApiResponse.success(response.getMessage(), response));
    }
}